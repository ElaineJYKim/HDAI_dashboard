{"ast":null,"code":"var _jsxFileName = \"/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx\";\nimport React, { Component } from \"react\"; //import Chart from \"./chart\";\n\nconst API = \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      values: [],\n      //labels: [],\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(API).then(response => response.json()).then(data => this.setState({\n      data: data,\n      isLoading: false //WTF?????? only works when its false..\n\n    }));\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //ajax calls here\n    this.setState({\n      chartData: {\n        //labels: this.state.labels,\n        datasets: [{\n          label: \"Historical Chart\",\n          //data: this.state.data,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"]\n        }]\n      }\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          values = _this$state.values,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Loading... \");\n    } else {\n      var v = []; //var l = []\n\n      {\n        data.map(data => v.push(data.currentValues));\n      }\n      this.setState({\n        values: v\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, values.map(values => React.createElement(\"li\", {\n        key: values,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"values: \", values))));\n    }\n  }\n\n}\n\nexport default HistoricalChart;","map":{"version":3,"sources":["/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx"],"names":["React","Component","API","HistoricalChart","constructor","state","data","values","chartData","isLoading","componentDidMount","setState","fetch","then","response","json","componentWillMount","getChartData","datasets","label","backgroundColor","render","v","map","push","currentValues"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,MAAMC,GAAG,GACP,uIADF;;AAGA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACtCG,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGX;AACAC,MAAAA,SAAS,EAAE,EAJA;AAKXC,MAAAA,SAAS,EAAE;AALA,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAG,IAAAA,KAAK,CAACV,GAAD,CAAL,CACGW,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,IAAI,IACR,KAAKK,QAAL,CAAc;AACZL,MAAAA,IAAI,EAAEA,IADM;AAEZG,MAAAA,SAAS,EAAE,KAFC,CAEK;;AAFL,KAAd,CAHJ;AAQD;;AAEDO,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb;AACA,SAAKN,QAAL,CAAc;AACZH,MAAAA,SAAS,EAAE;AACT;AACAU,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,UAAAA,eAAe,EAAE,CAAC,yBAAD;AAHnB,SADQ;AAFD;AADC,KAAd;AAYD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKhB,KADlC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;AAAA,UACeE,SADf,eACeA,SADf;;AAGP,QAAIA,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,KAFD,MAEO;AACL,UAAIa,CAAC,GAAG,EAAR,CADK,CAEL;;AACA;AACEhB,QAAAA,IAAI,CAACiB,GAAL,CAASjB,IAAI,IAAIgB,CAAC,CAACE,IAAF,CAAOlB,IAAI,CAACmB,aAAZ,CAAjB;AACD;AACD,WAAKd,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEe;AAAV,OAAd;AACA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,MAAM,CAACgB,GAAP,CAAWhB,MAAM,IAChB;AAAI,QAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0BA,MAA1B,CADD,CADH,CADF,CADF;AASD;AACF;;AApEqC;;AAuExC,eAAeJ,eAAf","sourcesContent":["import React, { Component } from \"react\";\n//import Chart from \"./chart\";\n\nconst API =\n  \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      values: [],\n      //labels: [],\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          data: data,\n          isLoading: false //WTF?????? only works when its false..\n        })\n      );\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //ajax calls here\n    this.setState({\n      chartData: {\n        //labels: this.state.labels,\n        datasets: [\n          {\n            label: \"Historical Chart\",\n            //data: this.state.data,\n            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"]\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    const { data, values, isLoading } = this.state;\n\n    if (isLoading) {\n      return <p>Loading... </p>;\n    } else {\n      var v = [];\n      //var l = []\n      {\n        data.map(data => v.push(data.currentValues));\n      }\n      this.setState({ values: v });\n      return (\n        <React.Fragment>\n          <ul>\n            {values.map(values => (\n              <li key={values}>values: {values}</li>\n            ))}\n          </ul>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}