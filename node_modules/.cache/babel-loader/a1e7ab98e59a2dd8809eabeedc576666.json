{"ast":null,"code":"var _jsxFileName = \"/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx\";\nimport React, { Component } from \"react\"; //import Chart from \"./chart\";\n\nconst API = \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      labels: [],\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(API).then(response => response.json()).then(data => this.setState({\n      data: data.currentValue,\n      labels: data.time,\n      isLoading: false //WTF?????? only works when its false..\n\n    }));\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //ajax calls here\n    this.setState({\n      chartData: {\n        labels: this.state.labels,\n        datasets: [{\n          label: \"Historical Chart\",\n          data: this.state.data,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"]\n        }]\n      }\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Loading... \");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, data.map(points => React.createElement(\"li\", {\n        key: points,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, points)));\n    }\n  }\n\n}\n\nexport default HistoricalChart;","map":{"version":3,"sources":["/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx"],"names":["React","Component","API","HistoricalChart","constructor","state","data","labels","chartData","isLoading","componentDidMount","setState","fetch","then","response","json","currentValue","time","componentWillMount","getChartData","datasets","label","backgroundColor","render","map","points"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,MAAMC,GAAG,GACP,uIADF;;AAGA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACtCG,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAG,IAAAA,KAAK,CAACV,GAAD,CAAL,CACGW,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,IAAI,IACR,KAAKK,QAAL,CAAc;AACZL,MAAAA,IAAI,EAAEA,IAAI,CAACU,YADC;AAEZT,MAAAA,MAAM,EAAED,IAAI,CAACW,IAFD;AAGZR,MAAAA,SAAS,EAAE,KAHC,CAGK;;AAHL,KAAd,CAHJ;AASD;;AAEDS,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb;AACA,SAAKR,QAAL,CAAc;AACZH,MAAAA,SAAS,EAAE;AACTD,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADV;AAETa,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,kBADT;AAEEf,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFnB;AAGEgB,UAAAA,eAAe,EAAE,CAAC,yBAAD;AAHnB,SADQ;AAFD;AADC,KAAd;AAYD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKlB,KAD1B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOG,SADP,eACOA,SADP;;AAGP,QAAIA,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACkB,GAAL,CAASC,MAAM,IACd;AAAI,QAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,MAAlB,CADD,CADH,CADF;AAOD;AACF;;AA5DqC;;AA+DxC,eAAetB,eAAf","sourcesContent":["import React, { Component } from \"react\";\n//import Chart from \"./chart\";\n\nconst API =\n  \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      labels: [],\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          data: data.currentValue,\n          labels: data.time,\n          isLoading: false //WTF?????? only works when its false..\n        })\n      );\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //ajax calls here\n    this.setState({\n      chartData: {\n        labels: this.state.labels,\n        datasets: [\n          {\n            label: \"Historical Chart\",\n            data: this.state.data,\n            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"]\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    const { data, isLoading } = this.state;\n\n    if (isLoading) {\n      return <p>Loading... </p>;\n    } else {\n      return (\n        <ul>\n          {data.map(points => (\n            <li key={points}>{points}</li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}