{"ast":null,"code":"var _jsxFileName = \"/Users/elainekim/Desktop/challenge1/src/components/indexDetails.jsx\";\nimport React, { Component } from \"react\";\nimport IndexInfo from \"./indexInfo\";\nimport HistoricalChart from \"./historicalChart\";\nimport AssetInfo from \"./assetInfo\";\nconst API = \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/last\";\n\nclass IndexDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: [],\n      returns: [],\n      constituents: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    try {\n      this.setState({\n        isLoading: true\n      });\n      fetch(API).then(response => response.json()).then(data => this.setState({\n        index: data,\n        returns: data.returns,\n        constituents: data.constituents,\n        isLoading: false\n      }));\n      setInterval(async () => {\n        this.setState({\n          isLoading: true\n        });\n        fetch(API).then(response => response.json()).then(data => this.setState({\n          index: data,\n          returns: data.returns,\n          constituents: data.constituents,\n          isLoading: false\n        }));\n      }, 30000);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          index = _this$state.index,\n          returns = _this$state.returns,\n          constituents = _this$state.constituents,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Loading... \");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(IndexInfo, {\n        title: \"Current Level\",\n        value: index.currentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(IndexInfo, {\n        title: \"1 Hour Variation\",\n        value: returns.h1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(IndexInfo, {\n        title: \"24 Hour Variation\",\n        value: returns.h24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(IndexInfo, {\n        title: \"1 Month Variation\",\n        value: returns.MtD,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(IndexInfo, {\n        title: \"1 Year Variation\",\n        value: returns.YtD,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(HistoricalChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Asset Information\"), constituents.map(constituents => React.createElement(AssetInfo, {\n        key: constituents.assetId,\n        name: constituents.assetName,\n        id: constituents.assetId,\n        lastPrice: constituents.currentPrice,\n        h24Var: constituents.returns.h24,\n        marketCap: constituents.currentMarketCap,\n        weight: constituents.currentWeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default IndexDetails;","map":{"version":3,"sources":["/Users/elainekim/Desktop/challenge1/src/components/indexDetails.jsx"],"names":["React","Component","IndexInfo","HistoricalChart","AssetInfo","API","IndexDetails","constructor","props","state","index","returns","constituents","isLoading","componentDidMount","setState","fetch","then","response","json","data","setInterval","e","console","log","render","currentValue","h1","h24","MtD","YtD","map","assetId","assetName","currentPrice","currentMarketCap","currentWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexInfo from \"./indexInfo\";\nimport HistoricalChart from \"./historicalChart\";\nimport AssetInfo from \"./assetInfo\";\n\nconst API =\n  \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/last\";\n\nclass IndexDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: [],\n      returns: [],\n      constituents: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    try {\n      this.setState({ isLoading: true });\n\n      fetch(API)\n        .then(response => response.json())\n        .then(data =>\n          this.setState({\n            index: data,\n            returns: data.returns,\n            constituents: data.constituents,\n            isLoading: false\n          })\n        );\n      setInterval(async () => {\n        this.setState({ isLoading: true });\n\n        fetch(API)\n          .then(response => response.json())\n          .then(data =>\n            this.setState({\n              index: data,\n              returns: data.returns,\n              constituents: data.constituents,\n              isLoading: false\n            })\n          );\n      }, 30000);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    const { index, returns, constituents, isLoading } = this.state;\n\n    if (isLoading) {\n      return <p>Loading... </p>;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"container\">\n            <IndexInfo title={\"Current Level\"} value={index.currentValue} />\n            <IndexInfo title={\"1 Hour Variation\"} value={returns.h1} />\n            <IndexInfo title={\"24 Hour Variation\"} value={returns.h24} />\n            <IndexInfo title={\"1 Month Variation\"} value={returns.MtD} />\n            <IndexInfo title={\"1 Year Variation\"} value={returns.YtD} />\n          </div>\n\n          <HistoricalChart />\n\n          <div className=\"container\">\n            <h2>Asset Information</h2>\n            {constituents.map(constituents => (\n              <AssetInfo\n                key={constituents.assetId}\n                name={constituents.assetName}\n                id={constituents.assetId}\n                lastPrice={constituents.currentPrice}\n                h24Var={constituents.returns.h24}\n                marketCap={constituents.currentMarketCap}\n                weight={constituents.currentWeight}\n              />\n            ))}\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default IndexDetails;\n"]},"metadata":{},"sourceType":"module"}