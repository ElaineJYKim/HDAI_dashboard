{"ast":null,"code":"var _jsxFileName = \"/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx\";\nimport React, { Component } from \"react\";\nimport Chart from \"./chart\";\nconst API = \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(API).then(response => response.json()).then(data => {\n      const allData = data;\n      let values = [];\n      let times = [];\n      allData.forEach(element => {\n        values.push(element.currentValue);\n        times.push(element.time);\n      });\n      this.setState({\n        chartData: {\n          labels: times,\n          datasets: [{\n            label: \"Value During Specified Time\",\n            data: values,\n            backgroundColor: [\"rgba(54, 162, 235, 0.6)\"]\n          }]\n        },\n        isLoading: false //WTF?????? only works when its false..\n\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          chartData = _this$state.chartData,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading... \");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        chartData: chartData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default HistoricalChart;","map":{"version":3,"sources":["/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx"],"names":["React","Component","Chart","API","HistoricalChart","constructor","state","chartData","isLoading","componentDidMount","setState","fetch","then","response","json","data","allData","values","times","forEach","element","push","currentValue","time","labels","datasets","label","backgroundColor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,GAAG,GACP,uIADF;;AAGA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAG,IAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,YAAMC,OAAO,GAAGD,IAAhB;AACA,UAAIE,MAAM,GAAG,EAAb;AACA,UAAIC,KAAK,GAAG,EAAZ;AACAF,MAAAA,OAAO,CAACG,OAAR,CAAgBC,OAAO,IAAI;AACzBH,QAAAA,MAAM,CAACI,IAAP,CAAYD,OAAO,CAACE,YAApB;AACAJ,QAAAA,KAAK,CAACG,IAAN,CAAWD,OAAO,CAACG,IAAnB;AACD,OAHD;AAIA,WAAKb,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAE;AACTiB,UAAAA,MAAM,EAAEN,KADC;AAETO,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,6BADT;AAEEX,YAAAA,IAAI,EAAEE,MAFR;AAGEU,YAAAA,eAAe,EAAE,CAAC,yBAAD;AAHnB,WADQ;AAFD,SADC;AAWZnB,QAAAA,SAAS,EAAE,KAXC,CAWK;;AAXL,OAAd;AAaD,KAvBH;AAwBD;;AAEDoB,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKtB,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;;AAGP,QAAIA,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,KAFD,MAEO;AACL,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAED,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;AACF;;AArDqC;;AAwDxC,eAAeH,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"./chart\";\n\nconst API =\n  \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API)\n      .then(response => response.json())\n      .then(data => {\n        const allData = data;\n        let values = [];\n        let times = [];\n        allData.forEach(element => {\n          values.push(element.currentValue);\n          times.push(element.time);\n        });\n        this.setState({\n          chartData: {\n            labels: times,\n            datasets: [\n              {\n                label: \"Value During Specified Time\",\n                data: values,\n                backgroundColor: [\"rgba(54, 162, 235, 0.6)\"]\n              }\n            ]\n          },\n          isLoading: false //WTF?????? only works when its false..\n        });\n      });\n  }\n\n  render() {\n    const { chartData, isLoading } = this.state;\n\n    if (isLoading) {\n      return <p>Loading... </p>;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"container\">\n            <Chart chartData={chartData} />\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}