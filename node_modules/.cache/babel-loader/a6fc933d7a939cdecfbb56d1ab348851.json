{"ast":null,"code":"var _jsxFileName = \"/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx\";\nimport React, { Component } from \"react\";\nimport Chart from \"./chart\";\nconst API = \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //ajax calls here\n    this.setState({\n      chartData: {\n        labels: [\"Boston\", \"Worcester\", \"Springfield\", \"Lowell\", \"Cambridge\", \"New Bedford\"],\n        datasets: [{\n          label: \"Population\",\n          data: [617594, 181045, 153060, 106519, 105162, 95072],\n          backgroundColor: [//\"rgba(255, 99, 132, 0.6)\",\n          \"rgba(54, 162, 235, 0.6)\", //\"rgba(255, 206, 86, 0.6)\",\n          \"rgba(75, 192, 192, 0.6)\" //\"rgba(153, 102, 255, 0.6)\",\n          //\"rgba(255, 159, 64, 0.6)\",\n          //\"rgba(255, 99, 132, 0.6)\"\n          ]\n        }]\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(API).then(response => response.json()).then(data => this.setState({\n      prices: data,\n      isLoading: false //WTF?????? only works when its false..\n\n    }));\n  } //state = {};\n\n\n  render() {\n    const _this$state = this.state,\n          chartData = _this$state.chartData,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Loading... \");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        chartData: chartData,\n        legendPosition: \"bottom\",\n        location: \"Massachusets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default HistoricalChart;","map":{"version":3,"sources":["/Users/elainekim/Desktop/challenge1/src/components/historicalChart.jsx"],"names":["React","Component","Chart","API","HistoricalChart","constructor","state","chartData","isLoading","componentWillMount","getChartData","setState","labels","datasets","label","data","backgroundColor","componentDidMount","fetch","then","response","json","prices","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,GAAG,GACP,uIADF;;AAGA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb;AACA,SAAKC,QAAL,CAAc;AACZJ,MAAAA,SAAS,EAAE;AACTK,QAAAA,MAAM,EAAE,CACN,QADM,EAEN,WAFM,EAGN,aAHM,EAIN,QAJM,EAKN,WALM,EAMN,aANM,CADC;AASTC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,KAAzC,CAFR;AAGEC,UAAAA,eAAe,EAAE,CACf;AACA,mCAFe,EAGf;AACA,mCAJe,CAKf;AACA;AACA;AAPe;AAHnB,SADQ;AATD;AADC,KAAd;AA2BD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAU,IAAAA,KAAK,CAACf,GAAD,CAAL,CACGgB,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQJ,IAAI,IACR,KAAKJ,QAAL,CAAc;AACZW,MAAAA,MAAM,EAAEP,IADI;AAEZP,MAAAA,SAAS,EAAE,KAFC,CAEK;;AAFL,KAAd,CAHJ;AAQD,GAxDqC,CA0DtC;;;AACAe,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKjB,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;;AAGP,QAAIA,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,KAFD,MAEO;AACL,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,cAAc,EAAC,QAFjB;AAGE,QAAA,QAAQ,EAAC,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;AACF;;AA3EqC;;AA8ExC,eAAeH,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"./chart\";\n\nconst API =\n  \"https://npdpl9r340.execute-api.us-east-1.amazonaws.com/prod/marketdata/v1/index/HDAI/history?from=2019-01-01&to=2050-01-01&groupBy=1d\";\n\nclass HistoricalChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      chartData: {},\n      isLoading: false\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //ajax calls here\n    this.setState({\n      chartData: {\n        labels: [\n          \"Boston\",\n          \"Worcester\",\n          \"Springfield\",\n          \"Lowell\",\n          \"Cambridge\",\n          \"New Bedford\"\n        ],\n        datasets: [\n          {\n            label: \"Population\",\n            data: [617594, 181045, 153060, 106519, 105162, 95072],\n            backgroundColor: [\n              //\"rgba(255, 99, 132, 0.6)\",\n              \"rgba(54, 162, 235, 0.6)\",\n              //\"rgba(255, 206, 86, 0.6)\",\n              \"rgba(75, 192, 192, 0.6)\"\n              //\"rgba(153, 102, 255, 0.6)\",\n              //\"rgba(255, 159, 64, 0.6)\",\n              //\"rgba(255, 99, 132, 0.6)\"\n            ]\n          }\n        ]\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          prices: data,\n          isLoading: false //WTF?????? only works when its false..\n        })\n      );\n  }\n\n  //state = {};\n  render() {\n    const { chartData, isLoading } = this.state;\n\n    if (isLoading) {\n      return <p>Loading... </p>;\n    } else {\n      return (\n        <React.Fragment>\n          <Chart\n            chartData={chartData}\n            legendPosition=\"bottom\"\n            location=\"Massachusets\"\n          />\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default HistoricalChart;\n"]},"metadata":{},"sourceType":"module"}